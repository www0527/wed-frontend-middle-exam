name: PR Merge Notify

on:
  pull_request:
    types: [closed]

permissions:
  contents: read
  issues: write

jobs:
  notify-qc:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.title, '(qc)')
    runs-on: ubuntu-latest
    steps:
      - name: Notify QC for Acceptance
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.SYNC_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pull_number = context.payload.pull_request.number;
            const qcReviewer = 'www0527';
            const targetRepo = {
              owner: 'www0527',    // 替換為 B Repository 的所有者
              repo: 'Redux-learning'       // 替換為 B Repository 的名稱
            };
            
            try {
              // 從 PR 描述中獲取 issue 編號
              const prBody = context.payload.pull_request.body;
              const issueMatch = prBody.match(/#(\d+)/);
              
              if (!issueMatch) {
                throw new Error('未在 PR 描述中找到關聯的 issue');
              }
              
              const issueNumber = issueMatch[1];
              
              // 獲取 A Repository 的 issue 資訊
              const originalIssue = await github.rest.issues.get({
                owner,
                repo,
                issue_number: parseInt(issueNumber)
              });
              
              // 獲取 B Repository 所有打開的 issues
              const allIssues = await github.paginate(github.rest.issues.listForRepo, {
                ...targetRepo,
                state: 'open',
                per_page: 100
              });
              
              // 查找標題完全匹配的 issue
              const targetIssue = allIssues.find(issue => 
                issue.title.trim() === originalIssue.data.title.trim()
              );
              
              if (!targetIssue) {
                throw new Error('未在目標倉庫找到標題完全匹配的 issue');
              }
              
              // 發送通知
              await github.rest.issues.createComment({
                ...targetRepo,
                issue_number: targetIssue.number,
                body: `@${qcReviewer} PR #${pull_number} 已合併到 main 分支，請進行驗收。\n\n原始 PR: ${context.payload.pull_request.html_url}`
              });
              
              console.log(`通知已發送到 issue: ${targetIssue.html_url}`);
              
            } catch (error) {
              console.error('工作流執行錯誤:', error.message);
              throw error;
            }
